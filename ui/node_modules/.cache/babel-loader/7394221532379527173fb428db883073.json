{"ast":null,"code":"var _jsxFileName = \"/root/vr_workspace/ui/src/TranscribeOutput.js\";\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = () => ({\n  root: {\n    maxWidth: '800px',\n    display: 'flex'\n  },\n  outputText: {\n    marginLeft: '8px',\n    color: '#ef395a'\n  }\n});\n\nconst TranscribeOutput = _ref => {\n  let {\n    classes,\n    transcribedText,\n    interimTranscribedText\n  } = _ref;\n\n  if (transcribedText.length === 0 && interimTranscribedText.length === 0) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, transcribedText), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.outputText,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, interimTranscribedText));\n};\n\nexport default withStyles(useStyles)(TranscribeOutput);","map":{"version":3,"names":["React","withStyles","Typography","useStyles","root","maxWidth","display","outputText","marginLeft","color","TranscribeOutput","classes","transcribedText","interimTranscribedText","length"],"sources":["/root/vr_workspace/ui/src/TranscribeOutput.js"],"sourcesContent":["import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = () => ({\n  root: {\n    maxWidth: '800px',\n    display: 'flex'\n  },\n  outputText: {\n    marginLeft: '8px',\n    color: '#ef395a',\n  }\n});\n\nconst TranscribeOutput = ({classes, transcribedText, interimTranscribedText}) => {\n  if (transcribedText.length === 0 && interimTranscribedText.length === 0) {\n    return <Typography variant=\"body1\">...</Typography>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body1\">{transcribedText}</Typography>\n      <Typography className={classes.outputText} variant=\"body1\">{interimTranscribedText}</Typography>\n    </div>\n  )\n}\n\nexport default withStyles(useStyles)(TranscribeOutput);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAGA,MAAMC,SAAS,GAAG,OAAO;EACvBC,IAAI,EAAE;IACJC,QAAQ,EAAE,OADN;IAEJC,OAAO,EAAE;EAFL,CADiB;EAKvBC,UAAU,EAAE;IACVC,UAAU,EAAE,KADF;IAEVC,KAAK,EAAE;EAFG;AALW,CAAP,CAAlB;;AAWA,MAAMC,gBAAgB,GAAG,QAAwD;EAAA,IAAvD;IAACC,OAAD;IAAUC,eAAV;IAA2BC;EAA3B,CAAuD;;EAC/E,IAAID,eAAe,CAACE,MAAhB,KAA2B,CAA3B,IAAgCD,sBAAsB,CAACC,MAAvB,KAAkC,CAAtE,EAAyE;IACvE,oBAAO,oBAAC,UAAD;MAAY,OAAO,EAAC,OAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,SAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAEH,OAAO,CAACP,IAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,OAAO,EAAC,OAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6BQ,eAA7B,CADF,eAEE,oBAAC,UAAD;IAAY,SAAS,EAAED,OAAO,CAACJ,UAA/B;IAA2C,OAAO,EAAC,OAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4DM,sBAA5D,CAFF,CADF;AAMD,CAXD;;AAaA,eAAeZ,UAAU,CAACE,SAAD,CAAV,CAAsBO,gBAAtB,CAAf"},"metadata":{},"sourceType":"module"}