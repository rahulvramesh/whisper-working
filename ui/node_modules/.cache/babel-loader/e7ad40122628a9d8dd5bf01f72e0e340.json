{"ast":null,"code":"var _jsxFileName = \"/root/vr_workspace/ui/src/App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport TranscribeOutput from \"./TranscribeOutput\";\nimport SettingsSections from \"./SettingsSection\";\nimport { ReactMic } from 'react-mic';\nimport axios from \"axios\";\nimport { PulseLoader } from \"react-spinners\";\n\nconst useStyles = () => ({\n  root: {\n    display: 'flex',\n    flex: '1',\n    margin: '100px 0px 100px 0px',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column'\n  },\n  title: {\n    marginBottom: '30px'\n  },\n  settingsSection: {\n    marginBottom: '20px',\n    display: 'flex',\n    width: '100%'\n  },\n  buttonsSection: {\n    marginBottom: '40px'\n  },\n  recordIllustration: {\n    width: '100px'\n  }\n});\n\nconst App = _ref => {\n  let {\n    classes\n  } = _ref;\n  const [transcribedData, setTranscribedData] = useState(\"\");\n  const [interimTranscribedData] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('english');\n  const [selectedModel, setSelectedModel] = useState(1);\n  const [transcribeTimeout, setTranscribeTimout] = useState(5);\n  const [stopTranscriptionSession, setStopTranscriptionSession] = useState(false);\n  const intervalRef = useRef(null);\n  const stopTranscriptionSessionRef = useRef(stopTranscriptionSession);\n  stopTranscriptionSessionRef.current = stopTranscriptionSession;\n  const selectedLangRef = useRef(selectedLanguage);\n  selectedLangRef.current = selectedLanguage;\n  const selectedModelRef = useRef(selectedModel);\n  selectedModelRef.current = selectedModel;\n  const supportedLanguages = ['english', 'chinese', 'german', 'spanish', 'russian', 'korean', 'french', 'japanese', 'portuguese', 'turkish', 'polish', 'catalan', 'dutch', 'arabic', 'swedish', 'italian', 'indonesian', 'hindi', 'finnish', 'vietnamese', 'hebrew', 'ukrainian', 'greek', 'malay', 'czech', 'romanian', 'danish', 'hungarian', 'tamil', 'norwegian', 'thai', 'urdu', 'croatian', 'bulgarian', 'lithuanian', 'latin', 'maori', 'malayalam', 'welsh', 'slovak', 'telugu', 'persian', 'latvian', 'bengali', 'serbian', 'azerbaijani', 'slovenian', 'kannada', 'estonian', 'macedonian', 'breton', 'basque', 'icelandic', 'armenian', 'nepali', 'mongolian', 'bosnian', 'kazakh', 'albanian', 'swahili', 'galician', 'marathi', 'punjabi', 'sinhala', 'khmer', 'shona', 'yoruba', 'somali', 'afrikaans', 'occitan', 'georgian', 'belarusian', 'tajik', 'sindhi', 'gujarati', 'amharic', 'yiddish', 'lao', 'uzbek', 'faroese', 'haitian creole', 'pashto', 'turkmen', 'nynorsk', 'maltese', 'sanskrit', 'luxembourgish', 'myanmar', 'tibetan', 'tagalog', 'malagasy', 'assamese', 'tatar', 'hawaiian', 'lingala', 'hausa', 'bashkir', 'javanese', 'sundanese'];\n  const modelOptions = ['tiny', 'base', 'small', 'medium', 'large', 'large-v1'];\n  useEffect(() => {\n    console.log(\"AA\", transcribedData);\n  }, [transcribedData]);\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  function handleTranscribeTimeoutChange(newTimeout) {\n    setTranscribeTimout(newTimeout);\n  }\n\n  function startRecording() {\n    setStopTranscriptionSession(false);\n    setIsRecording(true);\n    intervalRef.current = setInterval(transcribeInterim, transcribeTimeout * 1000);\n  }\n\n  function stopRecording() {\n    clearInterval(intervalRef.current);\n    setStopTranscriptionSession(true);\n    setIsRecording(false);\n    setIsTranscribing(false);\n  }\n\n  function onData(recordedBlob) {// console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  function onStop(recordedBlob) {\n    transcribeRecording(recordedBlob);\n    setIsTranscribing(true);\n  }\n\n  function transcribeInterim() {\n    clearInterval(intervalRef.current);\n    setIsRecording(false);\n  }\n\n  function transcribeRecording(recordedBlob) {\n    console.log(\"hell\", transcribedData);\n    const temp = transcribedData;\n    const headers = {\n      \"content-type\": \"multipart/form-data\"\n    };\n    const formData = new FormData();\n    formData.append(\"language\", selectedLangRef.current);\n    formData.append(\"model_size\", modelOptions[selectedModelRef.current]);\n    formData.append(\"audio_data\", recordedBlob.blob, 'temp_recording');\n    axios.post(\"http://0.0.0.0:5000/transcribe\", formData, {\n      headers\n    }).then(res => {\n      console.log(\"Response\", res.data.text);\n      setTranscribedData(transcribedData + res.data.text);\n      setIsTranscribing(false);\n      intervalRef.current = setInterval(transcribeInterim, transcribeTimeout * 1000);\n    });\n\n    if (!stopTranscriptionSessionRef.current) {\n      setIsRecording(true);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Whisper Playground \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"microphone-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 30\n    }\n  }, \"\\uD83C\\uDFA4\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.settingsSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SettingsSections, {\n    disabled: isTranscribing || isRecording,\n    possibleLanguages: supportedLanguages,\n    selectedLanguage: selectedLanguage,\n    onLanguageChange: setSelectedLanguage,\n    modelOptions: modelOptions,\n    selectedModel: selectedModel,\n    onModelChange: setSelectedModel,\n    transcribeTimeout: transcribeTimeout,\n    onTranscribeTiemoutChanged: handleTranscribeTimeoutChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonsSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, !isRecording && !isTranscribing && /*#__PURE__*/React.createElement(Button, {\n    onClick: startRecording,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  }, \"Start transcribing\"), (isRecording || isTranscribing) && /*#__PURE__*/React.createElement(Button, {\n    onClick: stopRecording,\n    variant: \"danger\",\n    disabled: stopTranscriptionSessionRef.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  }, \"Stop\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recordIllustration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactMic, {\n    record: isRecording,\n    className: \"sound-wave\",\n    onStop: onStop,\n    onData: onData,\n    strokeColor: \"#0d6efd\",\n    backgroundColor: \"#f6f6ef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, transcribedData, /*#__PURE__*/React.createElement(PulseLoader, {\n    sizeUnit: \"px\",\n    size: 20,\n    color: \"purple\",\n    loading: isTranscribing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default withStyles(useStyles)(App);","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","withStyles","Typography","TranscribeOutput","SettingsSections","ReactMic","axios","PulseLoader","useStyles","root","display","flex","margin","alignItems","textAlign","flexDirection","title","marginBottom","settingsSection","width","buttonsSection","recordIllustration","App","classes","transcribedData","setTranscribedData","interimTranscribedData","isRecording","setIsRecording","isTranscribing","setIsTranscribing","selectedLanguage","setSelectedLanguage","selectedModel","setSelectedModel","transcribeTimeout","setTranscribeTimout","stopTranscriptionSession","setStopTranscriptionSession","intervalRef","stopTranscriptionSessionRef","current","selectedLangRef","selectedModelRef","supportedLanguages","modelOptions","console","log","clearInterval","handleTranscribeTimeoutChange","newTimeout","startRecording","setInterval","transcribeInterim","stopRecording","onData","recordedBlob","onStop","transcribeRecording","temp","headers","formData","FormData","append","blob","post","then","res","data","text"],"sources":["/root/vr_workspace/ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport TranscribeOutput from \"./TranscribeOutput\";\nimport SettingsSections from \"./SettingsSection\";\nimport { ReactMic } from 'react-mic';\nimport axios from \"axios\";\nimport { PulseLoader } from \"react-spinners\";\n\nconst useStyles = () => ({\n  root: {\n    display: 'flex',\n    flex: '1',\n    margin: '100px 0px 100px 0px',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  title: {\n    marginBottom: '30px',\n  },\n  settingsSection: {\n    marginBottom: '20px',\n    display: 'flex',\n    width: '100%',\n  },\n  buttonsSection: {\n    marginBottom: '40px',\n  },\n  recordIllustration: {\n    width: '100px',\n  }\n});\n\nconst App = ({ classes }) => {\n  const [transcribedData, setTranscribedData] = useState(\"\");\n  const [interimTranscribedData, ] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('english');\n  const [selectedModel, setSelectedModel] = useState(1);\n  const [transcribeTimeout, setTranscribeTimout] = useState(5);\n  const [stopTranscriptionSession, setStopTranscriptionSession] = useState(false);  \n\n  const intervalRef = useRef(null);\n  \n  const stopTranscriptionSessionRef = useRef(stopTranscriptionSession);\n  stopTranscriptionSessionRef.current = stopTranscriptionSession;\n\n  const selectedLangRef = useRef(selectedLanguage);\n  selectedLangRef.current = selectedLanguage;\n\n  const selectedModelRef = useRef(selectedModel);\n  selectedModelRef.current = selectedModel;\n\n  const supportedLanguages = ['english', 'chinese', 'german', 'spanish', 'russian', 'korean', 'french', 'japanese', 'portuguese', 'turkish', 'polish', 'catalan', 'dutch', 'arabic', 'swedish', 'italian', 'indonesian', 'hindi', 'finnish', 'vietnamese', 'hebrew', 'ukrainian', 'greek', 'malay', 'czech', 'romanian', 'danish', 'hungarian', 'tamil', 'norwegian', 'thai', 'urdu', 'croatian', 'bulgarian', 'lithuanian', 'latin', 'maori', 'malayalam', 'welsh', 'slovak', 'telugu', 'persian', 'latvian', 'bengali', 'serbian', 'azerbaijani', 'slovenian', 'kannada', 'estonian', 'macedonian', 'breton', 'basque', 'icelandic', 'armenian', 'nepali', 'mongolian', 'bosnian', 'kazakh', 'albanian', 'swahili', 'galician', 'marathi', 'punjabi', 'sinhala', 'khmer', 'shona', 'yoruba', 'somali', 'afrikaans', 'occitan', 'georgian', 'belarusian', 'tajik', 'sindhi', 'gujarati', 'amharic', 'yiddish', 'lao', 'uzbek', 'faroese', 'haitian creole', 'pashto', 'turkmen', 'nynorsk', 'maltese', 'sanskrit', 'luxembourgish', 'myanmar', 'tibetan', 'tagalog', 'malagasy', 'assamese', 'tatar', 'hawaiian', 'lingala', 'hausa', 'bashkir', 'javanese', 'sundanese']\n\n  const modelOptions = ['tiny', 'base', 'small', 'medium', 'large', 'large-v1']\n\n  useEffect(() => {\n    console.log(\"AA\",transcribedData)\n  },[transcribedData])\n\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n\n  function handleTranscribeTimeoutChange(newTimeout) {\n    setTranscribeTimout(newTimeout)\n  }\n\n  function startRecording() {\n    setStopTranscriptionSession(false)\n    setIsRecording(true)\n    intervalRef.current = setInterval(transcribeInterim, transcribeTimeout * 1000)\n  }\n\n  function stopRecording() {\n    clearInterval(intervalRef.current);\n    setStopTranscriptionSession(true)\n    setIsRecording(false)\n    setIsTranscribing(false)\n  }\n\n  function onData(recordedBlob) {\n    // console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  function onStop(recordedBlob) {\n    transcribeRecording(recordedBlob)\n    setIsTranscribing(true)  \n  }\n\n  function transcribeInterim() {\n    clearInterval(intervalRef.current);\n    setIsRecording(false)\n  }\n\n  function transcribeRecording(recordedBlob) {\n\n    console.log(\"hell\",transcribedData);\n    const temp = transcribedData;\n\n    const headers = {\n      \"content-type\": \"multipart/form-data\",\n    };\n\n\n\n    const formData = new FormData();\n    formData.append(\"language\", selectedLangRef.current)\n    formData.append(\"model_size\", modelOptions[selectedModelRef.current])\n    formData.append(\"audio_data\", recordedBlob.blob, 'temp_recording');\n    axios.post(\"http://0.0.0.0:5000/transcribe\", formData, { headers })\n      .then((res) => {\n        console.log(\"Response\",res.data.text);\n\n\n\n        setTranscribedData(transcribedData + res.data.text)\n        setIsTranscribing(false)\n        intervalRef.current = setInterval(transcribeInterim, transcribeTimeout * 1000)\n      });\n      \n      if (!stopTranscriptionSessionRef.current){\n        setIsRecording(true)    \n      }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant=\"h3\">\n          Whisper Playground <span role=\"img\" aria-label=\"microphone-emoji\">🎤</span>\n        </Typography>\n      </div>\n      <div className={classes.settingsSection}>\n        <SettingsSections disabled={isTranscribing || isRecording} possibleLanguages={supportedLanguages} selectedLanguage={selectedLanguage}\n          onLanguageChange={setSelectedLanguage} modelOptions={modelOptions} selectedModel={selectedModel} onModelChange={setSelectedModel}\n          transcribeTimeout={transcribeTimeout} onTranscribeTiemoutChanged={handleTranscribeTimeoutChange} />\n      </div>\n      <div className={classes.buttonsSection} >\n        {!isRecording && !isTranscribing && <Button onClick={startRecording} variant=\"primary\">Start transcribing</Button>}\n        {(isRecording || isTranscribing) && <Button onClick={stopRecording} variant=\"danger\" disabled={stopTranscriptionSessionRef.current}>Stop</Button>}\n      </div>\n\n      <div className=\"recordIllustration\">\n        <ReactMic record={isRecording} className=\"sound-wave\" onStop={onStop}\n          onData={onData} strokeColor=\"#0d6efd\" backgroundColor=\"#f6f6ef\" />\n      </div>\n\n      <div>\n        {transcribedData}\n        {/*<TranscribeOutput transcribedText={transcribedData} interimTranscribedText={interimTranscribedData} />*/}\n        <PulseLoader sizeUnit={\"px\"} size={20} color=\"purple\" loading={isTranscribing} />\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(useStyles)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}